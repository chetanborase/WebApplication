basePath: /
definitions:
  model.Address:
    properties:
      address_1:
        type: string
      address_2:
        type: string
      address_3:
        type: string
      address_user_uuid:
        type: string
      area:
        type: string
      city:
        type: string
      country:
        type: string
      pin_code:
        type: string
      state:
        type: string
    type: object
  model.Contact:
    properties:
      contact_user_uuid:
        type: string
      dial_code:
        type: string
      full_phone_number:
        type: string
      phone_number:
        type: string
      social_media_id:
        type: string
      web_site:
        type: string
    type: object
  model.User:
    properties:
      addr:
        $ref: '#/definitions/model.Address'
      cont:
        $ref: '#/definitions/model.Contact'
      email:
        type: string
      first_name:
        type: string
      full_name:
        type: string
      id_xref:
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      password:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
      user_uuid:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is Simple Web Application.
  title: Assignment API
  version: "1.0"
paths:
  /accounts/:
    post:
      consumes:
      - application/json
      description: Accepts User Data in json format
      parameters:
      - description: User Data
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: successfully created
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "422":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: http response
          schema:
            type: string
      summary: Create New Account
    put:
      consumes:
      - application/json
      description: Accept User Details in json format and updates details in database
      parameters:
      - description: User Data
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Successfully
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "422":
          description: User Not Exists
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: http response
          schema:
            type: string
      summary: Update User Details
  /accounts/{id}:
    delete:
      consumes:
      - application/json
      description: Accept User uuid as a query parameter and deletes account
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deleted Successfully
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "422":
          description: user not exist
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: http response
          schema:
            type: string
      summary: Delete User Account
    get:
      consumes:
      - text/plain
      description: Accepts User Data in json format
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: User Not Found
          schema:
            type: string
        "404":
          description: User Not Found
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Show Account Details
  /accounts/search/:
    get:
      consumes:
      - text/plain
      description: Apply search and filter on database records and fetch result
      parameters:
      - description: key
        in: query
        name: key
        type: string
      - collectionFormat: multi
        description: city
        in: query
        items:
          type: string
        name: city
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Search Result
          schema:
            type: user
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: http response
          schema:
            type: string
      summary: Get Bunch of Users details
  /batch/accounts/{id}:
    get:
      consumes:
      - application/json
      description: Accept excel file in WebSocket than Read Validates and Stores To Database
      parameters:
      - description: User UUID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "422":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        default:
          description: http response
          schema:
            type: string
      summary: Upload Multiple User Accounts
schemes:
- http
swagger: "2.0"
